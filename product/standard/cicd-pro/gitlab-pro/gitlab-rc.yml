---
apiVersion: v1
kind: ReplicationController
metadata:
  name: gitlab
  namespace: gitlab
spec:
  replicas: 1
  selector:
    name: gitlab
  template:
    metadata:
      name: gitlab
      labels:
        name: gitlab
    spec:
      containers:
      - name: gitlab
        #image: sameersbn/gitlab:11.11.3
        image: sameersbn/gitlab:8.6.1
        env:
        - name: TZ
          value: Asia/Kolkata
        - name: GITLAB_TIMEZONE
          value: Kolkata

        - name: GITLAB_SECRETS_DB_KEY_BASE
          value: long-and-random-alpha-numeric-string
        - name: GITLAB_SECRETS_SECRET_KEY_BASE
          value: long-and-random-alpha-numeric-string
        - name: GITLAB_SECRETS_OTP_KEY_BASE
          value: long-and-random-alpha-numeric-string

        #gitlab的root账户默认密码
        - name: GITLAB_ROOT_PASSWORD
          value: NKkQmzRiz2uvzRi
        #gitlab的root账号的默认email，也是登录用户名，登陸用戶名默認是root,用下边配置的关联email也可以登录.
        - name: GITLAB_ROOT_EMAIL
          value: hpy253215039@163.com

        #git clone时的url的前缀
        - name: GITLAB_HOST
          value: gitlab.future.com:30834
        - name: GITLAB_PORT
          value: "80"
        - name: GITLAB_SSH_PORT
          value: "22"

        - name: GITLAB_NOTIFY_ON_BROKEN_BUILDS
          value: "true"
        - name: GITLAB_NOTIFY_PUSHER
          value: "false"

        #gitlab备份频率
        - name: GITLAB_BACKUP_SCHEDULE
          value: daily
        #gitlab每日备份时间
        - name: GITLAB_BACKUP_TIME
          value: 01:00

        #gitlab选择的数据库
        - name: DB_TYPE
          value: postgres
        #postgres也部署在了k8s中，所以这里是postgresql在k8s中的service域名
        - name: DB_HOST
          value: postgresql
        - name: DB_PORT
          value: "5432"
        - name: DB_USER
          value: gitlab
        - name: DB_PASS
          value: passw0rd
        - name: DB_NAME
          value: gitlab_production

        - name: REDIS_HOST
          value: redis
        - name: REDIS_PORT
          value: "6379"

        - name: SMTP_ENABLED
          value: "false"
        - name: SMTP_DOMAIN
          value: www.example.com
        - name: SMTP_HOST
          value: smtp.gmail.com
        - name: SMTP_PORT
          value: "587"
        - name: SMTP_USER
          value: mailer@example.com
        - name: SMTP_PASS
          value: password
        - name: SMTP_STARTTLS
          value: "true"
        - name: SMTP_AUTHENTICATION
          value: login

        - name: IMAP_ENABLED
          value: "false"
        - name: IMAP_HOST
          value: imap.gmail.com
        - name: IMAP_PORT
          value: "993"
        - name: IMAP_USER
          value: mailer@example.com
        - name: IMAP_PASS
          value: password
        - name: IMAP_SSL
          value: "true"
        - name: IMAP_STARTTLS
          value: "false"
        ports:
        - name: http
          containerPort: 80
        - name: ssh
          containerPort: 22
        volumeMounts:
        - mountPath: /home/git/data
          name: data
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 180
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 1
      volumes:
      - name: data
        #emptyDir: {}
        persistentVolumeClaim:
          claimName: gitlab-data-claim

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitlab-data-claim
  namespace: gitlab
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: "gitlab-storageclass-local"
  resources:  
    requests:
      storage: 20Gi
  selector:
    matchLabels:
      release: gitlab-data-pv-local

---
apiVersion: v1
kind: PersistentVolume
metadata:
    name: gitlab-data-pv-local
    labels:
      release: gitlab-data-pv-local
    namespace: gitlab
spec:
  capacity:
    storage: 20Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  storageClassName: "gitlab-storageclass-local"
  persistentVolumeReclaimPolicy: Retain
  #表示使用本地存储
  local:
    path: /datavip/k8s-data/gitlab-pv-local
  #使用local pv时必须定义nodeAffinity，Kubernetes Scheduler需要使用PV的nodeAffinity描述信息来保证Pod能够调度到有对应local volume的Node上。
  #创建local PV之前，你需要先保证有对应的storageClass已经创建。
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          #future是pod需要分不到的主机名，这台主机上开启了local-pv资源。
          - future
